generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User and Donation: One-to-Many: a single user can have multiple donations, and each donation is linked to exactly one user.
model User {
  id           Int        @id @default(autoincrement())
  first_name   String
  last_name    String
  full_addr    String
  email_addr   String     @unique
  opt_in       Boolean
  date_created DateTime   @default(now())
  is_admin     Boolean    @default(false)
  donations    Donation[]
}

// Donation and Cause: Many-to-Many: A Donation can support multiple causes, and a cause can be supported by multiple donations.
model Donation {
  id                      Int             @id @default(autoincrement())
  user                    User            @relation(fields: [user_id], references: [id])
  user_id                 Int
  amount                  Float
  donation_date           DateTime
  causes                  CauseDonation[]
  is_recurring            Boolean
  confirmation_email_sent Boolean
}

model CauseDonation {
  donation_id Int
  cause_id    Int
  donation    Donation @relation(fields: [donation_id], references: [id])
  cause       Cause    @relation(fields: [cause_id], references: [id])

  @@id([donation_id, cause_id])
}

// Cause and NPO: One-to-Many: A single cause can be associated with many NPOs, and each NPO is linked to one cause
model Cause {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  npos        NPO[]
  Donation    CauseDonation[]
}

// NPO and Item: One-to-One: One NPO can have one item, and each item can be associated with one NPOs
model NPO {
  id                  Int    @id @default(autoincrement())
  name                String
  contact_information String
  cause               Cause  @relation(fields: [cause_id], references: [id])
  cause_id            Int
  item                Item?  @relation("NPOItem", fields: [item_id], references: [id])
  item_id             Int?   @unique
}

model Item {
  id           Int    @id @default(autoincrement())
  name         String
  impact_ratio Float
  npo          NPO?   @relation("NPOItem")
  npo_id       Int?   @unique
}
